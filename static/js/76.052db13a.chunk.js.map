{"version":3,"file":"static/js/76.052db13a.chunk.js","mappings":"kJAKMA,EAAU,CACdC,cAAc,UAAD,OAHb,wNA+CIC,EAAU,CACdC,YA1CkB,WAAe,IAAdC,EAAa,uDAAN,EAC1B,OAAOC,EAAAA,EAAAA,IAAA,8DACkDD,EADlD,oBAEL,CACEJ,QAAAA,GAGL,EAoCCM,gBAlCsB,SAAAC,GACtB,OAAOF,EAAAA,EAAAA,IAAA,0EAC8DE,EAD9D,WAEL,CACEP,QAAAA,GAGL,EA4BCQ,kBA1BwB,SAAAC,GACxB,OAAOJ,EAAAA,EAAAA,IAAA,6CACiCI,EADjC,oBAEL,CACET,QAAAA,GAGL,EAoBCU,eAlBqB,SAAAC,GACrB,OAAON,EAAAA,EAAAA,IAAA,6CACiCM,EADjC,4BAEL,CACEX,QAAAA,GAEL,EAaCY,YAXkB,SAACD,GACnB,OAAON,EAAAA,EAAAA,IAAA,6CAAgDM,EAAhD,oBAA0E,CAC/EX,QAAAA,GAEH,GASD,K,qICxDA,EAA4B,wBAA5B,EAA2D,mB,SC+C3D,EA3Ca,WACX,IAAQa,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KAYA,OAVAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,sGACyBC,EAAAA,EAAAA,eAAmBN,EAAGO,UAAU,IADzD,cACQC,EADR,OAEQC,EAASD,EAASL,KAAKO,KAF/B,kBAGSN,EAAQK,IAHjB,4CADc,uBAAC,WAAD,wBAMdE,EAED,GAAE,KAGD,eAAIC,UAAWC,EAAf,SACY,OAATV,GACCA,EAAKW,KAAI,SAAAC,GACP,OAAIA,EAAMC,cAEN,gBAAKJ,UAAWC,EAAhB,SACGE,EAAMC,eACL,iCACE,wBACE,uBAAID,EAAME,UAEZ,yBACE,gBACEC,IAAKH,EAAMf,GACXmB,IAAG,0CAAqCJ,EAAMC,sBATtBD,EAAMf,IAiBrC,IACR,KAGR,C","sources":["api/api.js","webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst apiKeyV4 =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkMzViOWVlYjgzZmM3OGExYWQ3OTczOGE4MTBjNTZkZiIsInN1YiI6IjYzOTMxNjc3Y2VlMmY2MDA5MzExM2M3ZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.wM3pFCsG_9GXnQWlWqat3GMYp-exwI3OqqHu5fQeliY';\n\nconst headers = {\n  Authorization: `Bearer ${apiKeyV4}`,\n};\n\nconst fetchMovies = (page = 1) => {\n  return axios.get(\n    `https://api.themoviedb.org/3/trending/all/week?page=${page}?&language=ru-RU`,\n    {\n      headers,\n    }\n  );\n};\n\nconst fetchSerchMovie = query => {\n  return axios.get(\n    `https://api.themoviedb.org/3/search/movie?&language=ru-RU&query=${query}&page=1`,\n    {\n      headers,\n    }\n  );\n};\n\nconst fetchMovieDetails = queryId => {\n  return axios.get(\n    `https://api.themoviedb.org/3/movie/${queryId}?&language=ru-RU`,\n    {\n      headers,\n    }\n  );\n};\n\nconst fetchMovieCast = filmID => {\n  return axios.get(\n    `https://api.themoviedb.org/3/movie/${filmID}/credits?&language=ru-RU`,\n    {\n      headers,\n    });\n};\n\nconst fetchReview = (filmID) => {\n  return axios.get(`https://api.themoviedb.org/3/movie/${filmID}/reviews?&page=1`, {\n    headers,\n  });\n};\n\nconst exports = {\n  fetchMovies,\n  fetchSerchMovie,\n  fetchMovieDetails,\n  fetchMovieCast,\n  fetchReview,\n}\nexport default exports\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Cast_container__iz+ye\",\"item\":\"Cast_item__a0CDL\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport api from '../../api/api';\nimport styles from './Cast.module.css';\n\nconst Cast = () => {\n  const { id } = useParams();\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    async function fetchCast() {\n      const response = await api.fetchMovieCast(id.substring(1));\n      const result = response.data.cast;\n      return setData(result);\n    }\n    fetchCast();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <ul className={styles.container}>\n      {data !== null &&\n        data.map(actor => {\n          if (actor.profile_path) {\n            return (\n              <div className={styles.item} key={actor.id}>\n                {actor.profile_path && (\n                  <>\n                    <p>\n                      <b>{actor.name}</b>\n                    </p>\n                    <li >\n                      <img\n                        alt={actor.id}\n                        src={`https://image.tmdb.org/t/p/w200/${actor.profile_path}`}\n                      />\n                    </li>\n                  </>\n                )}\n              </div>\n            );\n          }\n          return null\n        })}\n    </ul>\n  );\n};\n\nexport default Cast;\n"],"names":["headers","Authorization","exports","fetchMovies","page","axios","fetchSerchMovie","query","fetchMovieDetails","queryId","fetchMovieCast","filmID","fetchReview","id","useParams","useState","data","setData","useEffect","api","substring","response","result","cast","fetchCast","className","styles","map","actor","profile_path","name","alt","src"],"sourceRoot":""}