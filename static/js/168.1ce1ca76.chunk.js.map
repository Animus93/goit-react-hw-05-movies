{"version":3,"file":"static/js/168.1ce1ca76.chunk.js","mappings":"mJAKMA,EAAU,CACdC,cAAc,UAAD,OAHb,wNA+CIC,EAAU,CACdC,YA1CkB,WAAe,IAAdC,EAAa,uDAAN,EAC1B,OAAOC,EAAAA,EAAAA,IAAA,8DACkDD,EADlD,oBAEL,CACEJ,QAAAA,GAGL,EAoCCM,gBAlCsB,SAAAC,GACtB,OAAOF,EAAAA,EAAAA,IAAA,0EAC8DE,EAD9D,WAEL,CACEP,QAAAA,GAGL,EA4BCQ,kBA1BwB,SAAAC,GACxB,OAAOJ,EAAAA,EAAAA,IAAA,6CACiCI,EADjC,oBAEL,CACET,QAAAA,GAGL,EAoBCU,eAlBqB,SAAAC,GACrB,OAAON,EAAAA,EAAAA,IAAA,6CACiCM,EADjC,4BAEL,CACEX,QAAAA,GAEL,EAaCY,YAXkB,SAACD,GACnB,OAAON,EAAAA,EAAAA,IAAA,6CAAgDM,EAAhD,oBAA0E,CAC/EX,QAAAA,GAEH,GASD,K,sICxDA,GAAgB,UAAY,2BAA2B,KAAO,sBAAsB,KAAO,uB,SC+C3F,EA3CgB,WACd,IAAQa,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KAWA,OAVAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,sGACyBC,EAAAA,EAAAA,YAAgBN,EAAGO,UAAU,IADtD,cACQC,EADR,OAEQC,EAASD,EAASL,KAAKO,QAF/B,kBAGSN,EAAQK,IAHjB,4CADc,uBAAC,WAAD,wBAMdE,EAED,GAAE,KAGD,eAAIC,UAAWC,EAAAA,UAAf,SACY,OAATV,EACCA,EAAKW,KAAI,SAAAC,GACP,OACE,gBAAKH,UAAWC,EAAAA,KAAhB,SAC2C,OAAtCE,EAAOC,eAAeC,cACvB,iCACF,eAAGL,UAAWC,EAAAA,KAAd,WACE,0DADF,KACiBE,EAAOG,WAExB,2BACI,gBACEC,IAAG,0CAAqCJ,EAAOC,eAAeC,aAC9DG,IAAKL,EAAOf,MAEhB,cAAGY,UAAWC,EAAAA,QAAd,SAA+BE,EAAOM,iBAXRN,EAAOf,GAiB5C,KAED,wLAIP,C","sources":["api/api.js","webpack://goit-react-hw-05-movies/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst apiKeyV4 =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkMzViOWVlYjgzZmM3OGExYWQ3OTczOGE4MTBjNTZkZiIsInN1YiI6IjYzOTMxNjc3Y2VlMmY2MDA5MzExM2M3ZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.wM3pFCsG_9GXnQWlWqat3GMYp-exwI3OqqHu5fQeliY';\n\nconst headers = {\n  Authorization: `Bearer ${apiKeyV4}`,\n};\n\nconst fetchMovies = (page = 1) => {\n  return axios.get(\n    `https://api.themoviedb.org/3/trending/all/week?page=${page}?&language=ru-RU`,\n    {\n      headers,\n    }\n  );\n};\n\nconst fetchSerchMovie = query => {\n  return axios.get(\n    `https://api.themoviedb.org/3/search/movie?&language=ru-RU&query=${query}&page=1`,\n    {\n      headers,\n    }\n  );\n};\n\nconst fetchMovieDetails = queryId => {\n  return axios.get(\n    `https://api.themoviedb.org/3/movie/${queryId}?&language=ru-RU`,\n    {\n      headers,\n    }\n  );\n};\n\nconst fetchMovieCast = filmID => {\n  return axios.get(\n    `https://api.themoviedb.org/3/movie/${filmID}/credits?&language=ru-RU`,\n    {\n      headers,\n    });\n};\n\nconst fetchReview = (filmID) => {\n  return axios.get(`https://api.themoviedb.org/3/movie/${filmID}/reviews?&page=1`, {\n    headers,\n  });\n};\n\nconst exports = {\n  fetchMovies,\n  fetchSerchMovie,\n  fetchMovieDetails,\n  fetchMovieCast,\n  fetchReview,\n}\nexport default exports\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Reviews_container__2j80+\",\"cast\":\"Reviews_cast__+ypwJ\",\"item\":\"Reviews_item__DJKij\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport api from '../../api/api';\nimport styles from './Reviews.module.css';\n\nconst Reviews = () => {\n  const { id } = useParams();\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    async function fetchReviews() {\n      const response = await api.fetchReview(id.substring(1));\n      const result = response.data.results;\n      return setData(result);\n    }\n    fetchReviews();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  \n  return (\n    <ul className={styles.container}>\n      {data !== null ? (\n        data.map(review => {\n          return (\n            <div className={styles.item} key={review.id}>\n                {review.author_details.avatar_path !== null && \n                <>\n              <p className={styles.cast}>\n                <b>Автор</b>: {review.author}\n              </p>\n              <li>\n                  <img\n                    src={`https://image.tmdb.org/t/p/w200/${review.author_details.avatar_path}`}\n                    alt={review.id}\n                  />\n                <p className={styles.content}>{review.content}</p>\n              </li>\n              </>\n                }\n            </div>\n          );\n        })\n      ) : (\n        <p>у этого фильма еще нет обзоров</p>\n      )}\n    </ul>\n  );\n};\n\nexport default Reviews;\n"],"names":["headers","Authorization","exports","fetchMovies","page","axios","fetchSerchMovie","query","fetchMovieDetails","queryId","fetchMovieCast","filmID","fetchReview","id","useParams","useState","data","setData","useEffect","api","substring","response","result","results","fetchReviews","className","styles","map","review","author_details","avatar_path","author","src","alt","content"],"sourceRoot":""}