{"version":3,"file":"static/js/669.c6a21ebe.chunk.js","mappings":"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","sources":["api/api.js","webpack://goit-react-hw-05-movies/./src/components/MoviePage/MoviePage.module.css?7e00","components/MoviePage/MoviePage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst apiKeyV4 =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkMzViOWVlYjgzZmM3OGExYWQ3OTczOGE4MTBjNTZkZiIsInN1YiI6IjYzOTMxNjc3Y2VlMmY2MDA5MzExM2M3ZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.wM3pFCsG_9GXnQWlWqat3GMYp-exwI3OqqHu5fQeliY';\n\nconst headers = {\n  Authorization: `Bearer ${apiKeyV4}`,\n};\n\nconst fetchMovies = (page = 1) => {\n  return axios.get(\n    `https://api.themoviedb.org/3/trending/all/week?page=${page}?&language=ru-RU`,\n    {\n      headers,\n    }\n  );\n};\n\nconst fetchSerchMovie = query => {\n  return axios.get(\n    `https://api.themoviedb.org/3/search/movie?&language=ru-RU&query=${query}&page=1`,\n    {\n      headers,\n    }\n  );\n};\n\nconst fetchMovieDetails = queryId => {\n  return axios.get(\n    `https://api.themoviedb.org/3/movie/${queryId}?&language=ru-RU`,\n    {\n      headers,\n    }\n  );\n};\n\nconst fetchMovieCast = filmID => {\n  return axios.get(\n    `https://api.themoviedb.org/3/movie/${filmID}/credits?&language=ru-RU`,\n    {\n      headers,\n    });\n};\n\nconst fetchReview = (filmID) => {\n  return axios.get(`https://api.themoviedb.org/3/movie/${filmID}/reviews?&page=1`, {\n    headers,\n  });\n};\n\nconst exports = {\n  fetchMovies,\n  fetchSerchMovie,\n  fetchMovieDetails,\n  fetchMovieCast,\n  fetchReview,\n}\nexport default exports\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MoviePage_container__jm-0i\",\"item\":\"MoviePage_item__EW0yj\",\"description\":\"MoviePage_description__8CmcR\",\"d7\":\"MoviePage_d7__apGlH\"};","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport api from '../../api/api';\nimport styles from './MoviePage.module.css';\n\nclass MoviePage extends React.Component {\n  state = {\n    value: '',\n    query: [],\n  };\n\n  componentDidMount() {\n   if(localStorage.query){\n    const savedQuery = JSON.parse(localStorage.getItem('query'))\n    this.setState({query: savedQuery})\n   }\n  }\n\n  onButtonListner = async data => {\n    data.preventDefault();\n    if(!this.state.value){\n      return alert(\"Введите название фильма для поиска\")\n    }\n    const response = await api.fetchSerchMovie(this.state.value);\n    const results = await response.data.results;\n    await this.setState({ query: results, value: '' });\n    localStorage.setItem('query',JSON.stringify(results))\n  };\n\n  onInputListner = data => {\n    this.setState({ value: data.currentTarget.value });\n  };\n\n  render() {\n    const { query } = this.state;\n    return (\n      <>\n        <form className={styles.d7} onSubmit={this.onButtonListner}>\n          <button type=\"submit\">Найти</button>\n          <input\n            type=\"text\"\n            placeholder=\"Искать здесь...\"\n            onChange={this.onInputListner}\n            value={this.state.value}\n          />\n        </form>\n        {query.length > 0 && (\n          <div className={styles.container}>\n            {query\n              .sort((prev, next) => next.vote_count - prev.vote_count)\n              .map(movie => {\n                if(movie.poster_path){\n                  return (\n                  <div key={movie.id}>\n                    <li className={styles.item}>\n                    <Link to={`/goit-react-hw-05-movies/movie/:${movie.id}`}>\n                      <img\n                        src={`https://image.tmdb.org/t/p/w200/${movie.poster_path}`}\n                        alt={movie.id}\n                      />\n                      </Link>\n                      <div className={styles.description}>\n                        <p>\n                          <b>{movie.title}</b>\n                        </p>\n                        <p>\n                          <b>Описание</b>: {movie.overview}\n                        </p>\n                        <p>\n                          <b>Оценка</b>: {movie.vote_average}\n                        </p>\n                        <p>\n                          <b>Голосов</b>: {movie.vote_count}\n                        </p>\n                      </div>\n                    </li>\n                    <hr />\n                  </div>\n                )}\n                return <div key={movie.id}></div>;\n              })}\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nexport default MoviePage;\n"],"names":["headers","Authorization","exports","fetchMovies","page","axios","fetchSerchMovie","query","fetchMovieDetails","queryId","fetchMovieCast","filmID","fetchReview","MoviePage","state","value","onButtonListner","data","preventDefault","alert","api","response","results","setState","localStorage","setItem","JSON","stringify","onInputListner","currentTarget","savedQuery","parse","getItem","this","className","styles","onSubmit","type","placeholder","onChange","length","sort","prev","next","vote_count","map","movie","poster_path","to","id","src","alt","title","overview","vote_average","React"],"sourceRoot":""}